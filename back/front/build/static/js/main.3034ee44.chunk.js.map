{"version":3,"sources":["backend/api.js","backend/apiCalls.js","Components/Card.jsx","Components/AddPatient.js","Components/Home.jsx","routes.js","index.js"],"names":["API","process","listPatients","a","console","log","fetch","then","res","json","patients","catch","err","removePatient","_id","method","headers","body","JSON","stringify","patient","updatePatient","status","Accept","response","data","error","addPatient","Card","setReload","f","reload","useState","cdata","setCdata","setStatusValue","text","setText","name","lastname","phone","email","val","setVal","className","readOnly","type","value","placeholder","onChange","event","target","style","display","onClick","setTimeout","message","AddPatient","values","setValues","setError","undefined","success","setSuccess","handleChange","e","id","Home","number","setNumber","setPatient","filtered","setFiltered","addP","setAddP","cls","setCls","ShowAdd","handleClick","useEffect","temp","map","toString","startsWith","push","idx","Routes","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3034ee44.chunk.js","sourcesContent":["export const API =process.env.REACT_APP_BACKEND","import { API } from \"./api\"\r\n\r\nexport const listPatients = async ()=>{\r\n    console.log(\"called list patients\")\r\n    return fetch(`${API}/listpatients`)\r\n    .then(res=>res.json())\r\n    .then(patients=> {\r\n        return patients} )\r\n        .catch(err=>console.log(\"Error: \",err))\r\n}\r\n    \r\nexport const searchPatient = async number=>{\r\n    console.log(\"Search\")\r\n    return fetch(`${API}/searchpatients`,{\r\n        method:\"post\",\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        },\r\n        body: JSON.stringify({number})\r\n    })\r\n    .then(res=>res.json())\r\n    .then(patient=>{console.log(patient)})\r\n    .catch(err=>console.log(\"errr\",err))\r\n}\r\n\r\nexport const removePatient = async _id =>{\r\n    console.log(\"Remove\")\r\n    return fetch(`${API}/removepatient`,{\r\n        method:\"DELETE\",\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        },\r\n        body: JSON.stringify({_id})\r\n    })\r\n    .then(res=>res.json())\r\n    .then(patient=>patient)\r\n    .catch(err=>console.log(\"errr\",err))\r\n}\r\n\r\nexport const updatePatient=async (_id,status)=>{\r\n    console.log(\"update\")\r\n    return fetch(`${API}/updatePatient`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            Accept:'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({_id,status}),\r\n        })\r\n        .then(response => response.json())\r\n        .then(data =>data)\r\n        .catch(error => error);\r\n}\r\n\r\nexport const addPatient=  async (patient)=>{\r\n    console.log(patient)\r\n    return fetch(`${API}/addpatient`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        },\r\n        body: JSON.stringify(patient)\r\n    })\r\n    .then(res=>res.json())\r\n    .then(patient=>{return patient})\r\n    .catch(err=>console.log(\"errr\",err))\r\n}","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from 'react'\r\nimport { API } from '../backend/api'\r\nimport { removePatient,updatePatient } from '../backend/apiCalls'\r\nimport \"./card.css\"\r\nconst Card = ({data,setReload=f=>f,reload=undefined}) => {\r\n    const [cdata, setCdata] = useState({...data})\r\n    const [readValues, setreadValue] = useState(true)\r\n    const [Statusvalue, setStatusValue] = useState(true)\r\n    const [text, setText] = useState(\"Update\")\r\n    const {name,lastname,phone,status,email,_id} = cdata\r\n    const [val, setVal] = useState(\"none\")\r\n\r\n    const handleDelete=()=>{\r\n            removePatient(_id)\r\n            .then(res=>{\r\n                if(res.message){\r\n                    setReload(reload=>!reload)\r\n                }\r\n            })\r\n            .catch(err=>console.log(\"errrrr\",err))\r\n    }\r\n    \r\n    const handleUpdate=()=>{\r\n        setStatusValue(true)\r\n        setVal(\"\")\r\n\r\n        updatePatient(_id,status)\r\n        .then(res=>{\r\n            setTimeout(() => {\r\n                setVal(\"none\")\r\n                setText(\"update\")\r\n            }, 2000);\r\n        })\r\n    }\r\n\r\n    \r\n    const handleChange=(event)=>{\r\n        setCdata({...cdata, status:event.target.value})\r\n        setText(\"Save Changes\")\r\n    }\r\n    return (\r\n        <div className=\"bigDiv text-info\">\r\n            <div className=\" m-2 form-group   row\">\r\n                <label className=\"mt-2 col-sm-2 col-form-label\">Name</label>\r\n                <div className=\"col-sm-10\">\r\n                    <input readOnly type=\"text\" value={name +\" \"+ lastname} className=\" mt-2 form-control\"placeholder=\"Name\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"m-2 form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">Email</label>\r\n                <div className=\"col-sm-10\">\r\n                    <input readOnly type=\"text\" value={email} className=\"form-control\"placeholder=\"Email\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"m-2 form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">Mobile</label>\r\n                <div className=\"col-sm-10\">\r\n                    <input readOnly type=\"text\" value={phone} className=\"form-control\"placeholder=\"Mobile Number\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"m-2 form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\">Status</label>\r\n                <div className=\"col-sm-10\">\r\n                    <select onChange={handleChange} type=\"text\" value={status} className=\" mb-2 form-control\"placeholder=\"Status\">\r\n                        <option>Positive</option>\r\n                        <option>Negative</option>\r\n                        <option>Pending</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div className=\"div text-center bg-gradient-info\" style={{display: val}}><h4 className=\"\">Updated Successfully</h4></div>\r\n            <div className=\"m-2 form-group text-center row\">\r\n                <div className=\"col-6 \">\r\n                    <button onClick={()=>{\r\n                        handleUpdate()}} className=\"bg-gradient btn btn-primary\">{text}</button>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <button onClick={()=>{\r\n                        handleDelete()\r\n                        }} className=\"btn btn-danger bg-gradient\">Remove</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Card","import React, { useState } from 'react'\r\nimport { addPatient } from '../backend/apiCalls'\r\nimport \"./modal.css\"\r\nconst AddPatient = () => {\r\n\r\n    const [values, setValues] = useState({\r\n        name: \"\",\r\n        lastname:\"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        status: \"Negative\"\r\n    })\r\n    const [error, setError] = useState(false)\r\n    const [success, setSuccess] = useState(undefined)\r\n    const { name,lastname, email, phone, status } = values\r\n    const handleSubmit = () => {\r\n\r\n        if(!name || !lastname || !email || !phone){\r\n            setError(true)\r\n        }\r\n        else{\r\n            addPatient(values)\r\n            .then(res => {\r\n                setSuccess(true)\r\n                setError(false)\r\n                if (res.message) {\r\n                    setValues({\r\n                        name: \"\",\r\n                        lastname:\"\",\r\n                        email: \"\",\r\n                        phone: \"\",\r\n                        status: \"Positive\"\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleChange = value => e => {\r\n        setValues({ ...values, [value]: e.target.value })\r\n    }\r\n    return (\r\n        <div className=\"modalAdd text-info p-2 \">\r\n            <form>\r\n                {\r\n                    error && (\r\n                        <div className=\"bg-dark rounded\">\r\n                            <h4 className=\"text-center  text-danger\">All fields are Mandatory</h4>\r\n                        </div>\r\n                    )\r\n                }\r\n                <div className=\"form-group row m-2\">\r\n                    <label className=\"col-sm-2 col-form-label\">Name</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input onChange={handleChange(\"name\")} type=\"text\" value={name} className=\"form-control\" placeholder=\"Name\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row m-2\">\r\n                    <label className=\"col-sm-2 col-form-label\">Last Name</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input onChange={handleChange(\"lastname\")} type=\"text\" value={lastname} className=\"form-control\" placeholder=\"Last Name\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row m-2\">\r\n                    <label className=\"col-sm-2 col-form-label\">Email</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"text\" onChange={handleChange(\"email\")} value={email} className=\"form-control\" id=\"staticEmail\" placeholder=\"email@example.com\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row m-2\">\r\n                    <label className=\"col-sm-2 col-form-label\">Mobile</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"text\" onChange={handleChange(\"phone\")} value={phone} className=\"form-control\" placeholder=\"Mobile Number\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row m-2\">\r\n                    <label className=\"col-sm-2 col-form-label\">Status</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <select onChange={handleChange(\"status\")} value={status} type=\"text\" className=\" mb-2 form-control\" placeholder=\"Status\">\r\n                            <option>Negative</option>\r\n                            <option>Positive</option>\r\n                            <option>Pending</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"text-info text-center bg-dark rounded mb-2 p-1\" style={{display: success ? \"\":\"none\"}}> <h4> Patient Added..!</h4></div>\r\n                    <div onClick={handleSubmit} className=\"btn btn-outline-info\">Add Patient</div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddPatient\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react'\r\nimport Card from './Card'\r\nimport \"./card.css\"\r\nimport { listPatients } from '../backend/apiCalls'\r\nimport { Link } from 'react-router-dom'\r\nimport AddPatient from './AddPatient'\r\nimport \"./style.css\"\r\nconst Home = () => {\r\n\r\n    const [number, setNumber] = useState()\r\n    const [patients, setPatient] = useState()\r\n    const [filtered, setFiltered] = useState()\r\n    const [reload, setReload] = useState(false)\r\n    const [addP, setAddP] = useState(false)\r\n    const [cls, setCls]=useState(\"outer\")\r\n\r\n    const handleChange = async event => {\r\n        setNumber(event.target.value)\r\n    }\r\n\r\n    const search = () => {\r\n        return (\r\n            <div>\r\n                <div className=\"input-group\">\r\n                    <input type=\"search\"\r\n                        className=\"form-control rounded\"\r\n                        placeholder=\"Search By Phone Number\" aria-label=\"Search\"\r\n                        aria-describedby=\"search-addon\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const ShowAdd=()=>{\r\n        setCls(\"outer bg-active\")\r\n        setAddP(true)\r\n    }\r\n\r\n    const handleClick=()=>{\r\n        setCls(\"outer\")\r\n        setAddP(false)\r\n    }\r\n\r\n    \r\n    const allPatients = () => {\r\n        return (\r\n            <div className=\"big mt-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\"></div>\r\n                    <div className=\"col-6\">{search()}</div>\r\n                    <div className=\"col-2 text-center \"><button onClick={ShowAdd} className=\"btn btn-outline-info\">Add patinet</button></div>\r\n                    {\r\n                        addP && (\r\n                            <div className={`${cls}`}>\r\n                                <AddPatient />\r\n                                <div className=\"cst\">\r\n                                    <button onClick={handleClick} className=\"btn btn-outline-danger mt-4\">Close</button>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    <div className=\"col-2\"></div>\r\n                </div>\r\n                <div className=\"mainC\">\r\n                    {\r\n                        filtered && (\r\n                            filtered.map((patient, idx) => {\r\n                                return (\r\n                                    <Card key={idx}\r\n                                        data={patient}\r\n                                        setReload={setReload}\r\n                                    />\r\n                                )\r\n                            })\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    useEffect(() => {\r\n        console.log(reload)\r\n        setReload(reload)\r\n    }, [reload])\r\n\r\n\r\n    useEffect(() => {\r\n        const temp = []\r\n        if (!number) {\r\n            setFiltered(patients)\r\n        }\r\n        else {\r\n            patients.map(patient => {\r\n                if (number && patient.phone.toString().startsWith(number.toString())) {\r\n                    temp.push(patient)\r\n                }\r\n            })\r\n            setFiltered(temp)\r\n        }\r\n    }, [number, reload])\r\n\r\n    useEffect(() => {\r\n        listPatients()\r\n            .then(data => {\r\n                setPatient(data)\r\n                setFiltered(data)\r\n            })\r\n    }, [reload])\r\n\r\n    return (\r\n        <div className=\"div\">\r\n            {allPatients()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport {BrowserRouter,Switch,Route} from \"react-router-dom\"\r\nimport Home from './Components/Home'\r\nimport AddPatient from './Components/AddPatient'\r\n\r\n\r\nexport default function Routes()\r\n{\r\n    return (\r\n        <BrowserRouter >\r\n            <Switch >\r\n            <Route path=\"/\" exact component ={Home}  />\r\n            <Route path=\"/add\" exact component ={AddPatient}  />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes  from './routes';\n\n\nReactDOM.render(\n  <Routes />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}